{% do headTitle().append(translate("txt-%s-in-%s")|format(affiliation.parseBranchedName(), affiliation.project.parseFullName())) %}
{% do headTitle().append(translate("txt-edit-costs-and-effort")) %}

<h1>{{ translate("txt-edit-costs-and-effort") }}</h1>

<p>{{ translate("txt-edit-costs-and-effort-of-affiliation-%s-in-%s-explanation")|format(
        affiliation.parseBranchedName(),
        affiliation.project.parseFullName()
    ) }}</p>

{% do form.prepare() %}
{{ form().openTag(form)|raw }}

<div class="row mb-3">
    <label class="col-sm-3 col-form-label">{{ translate("txt-project-name") }}</label>

    <div class="col-sm-9">
        <p class="form-control-plaintext">{{ projectLink(affiliation.project,'view-community', 'name') }}</p>
    </div>
</div>


<div class="row mb-3">
    <label class="col-sm-3 col-form-label">{{ translate("txt-affiliation") }}</label>

    <div class="col-sm-9">
        <p class="form-control-plaintext">{{ affiliationLink(affiliation,'view-community') }}
            ({{ affiliation.organisation.country.country }})</p>
    </div>
</div>

{% if hasWorkPackages and not project.hasWorkPackages() %}
    <br>
    {{ lbs5alert().danger(translate("txt-in-order-to-complete-the-costs-and-effort-in-this-phase-of-the-project-you-need-to-create-work-packages-first-here-%s")|format(url('community/project/project/work-packages',{'docRef':project.docRef})))|raw }}
{% endif %}


<table class="table table-listing table-striped table-sm">
    <tbody>
    {% set useContract = affiliationService.useActiveContract(affiliation) %}
    {% set contractVersion = contractService.findLatestContractVersionByAffiliation(affiliation) %}

    <tr class="table-success">
        <th>{{ translate("txt-costs") }} {% if useContract %}({{ translate("txt-from-contract") }}){% else %}[k&euro;]{% endif %}</th>
        {% for year in yearRange %}
            <th class="text-end">
                {% if projectService.isOutOfBounds(project, year) %}<span
                    class="text-danger"
                    title="{{ translate("txt-the-project-is-not-active-in-this-year") }}">{{ year }}</span>
                {% else %}
                    {{ year }}
                {% endif %}
            </th>
        {% endfor %}
        <th class="text-end">{{ translate("txt-total") }} {% if not useContract %}[k&euro;]{% endif %}</th>
    </tr>

    {# Rows for the costs #}
    <tr>
        {% if useContract %}
            <td><i class="far fa-handshake"
                   title="{{ translate("txt-values-are-taken-from-the-contract") }}"></i>
            </td>

            {% set totalContractCost = 0 %}
            {% for year in yearRange %}
                {% set contractVersionCost = contractService.findTotalCostByAffiliationInVersionPerYear(contractVersion, affiliation) %}

                <td class="text-end text-monospace">
                    {{ contractVersionCost[year]|currency_decimal(contractVersion.contract.currency) }}

                    {% set contractVersion = contractService.findLatestContractVersionByAffiliation(affiliation) %}
                    {% set exchangeRate = contractService.findLatestExchangeRate(contractVersion) %}
                    {% set contractCost = 0 %}
                    {% if exchangeRate %}
                        {% set contractCost = contractVersionCost[year] / (exchangeRate  * 1000) %}
                        <input type="hidden" class="form-control cost-input data-year={{ year }}"
                               name="costPerAffiliationAndYear[{{ affiliation.id }}][{{ year }}][cost]"
                               value="{{ contractCost }}">

                    {% endif %}

                    {% set totalContractCost = totalContractCost +contractVersionCost[year] %}
                </td>
            {% endfor %}

            <td class="text-end text-monospace">{{ totalContractCost|currency_decimal(contractVersion.contract.currency) }}</td>
        {% else %}
            <td></td>
            {% for year in yearRange %}
                {% if projectService.isOutOfBounds(project, year) %}
                    <td class="table-danger">
                {% else %}
                    <td>
                {% endif %}
                {% if year in editYearRange %}
                    {% set costPerAffiliationAndYear = form.get('costPerAffiliationAndYear') %}
                    {% set costPerAffiliationAndYear = costPerAffiliationAndYear.get(affiliation.id).get(year) %}
                    {{ formelement(costPerAffiliationAndYear.get('cost')) }}
                {% else %}
                    {% for cost in affiliation.cost|filter(cost => cost.dateStart|date('Y') == year) -%}
                        <span class="cost-input total-cost-year-{{ year }}">{{ cost.costs|parse_cost }}</span>
                    {% else %}
                        {{ 0|parse_effort }}
                    {% endfor %}
                {% endif %}
                </td>
            {% endfor %}

            <td class="text-end text-monospace total-cost-affiliation-{{ affiliation.id }}">
                {{ projectService.findTotalCostByAffiliation(affiliation)|parse_cost }}
            </td>
        {% endif %}
    </tr>

    <tr class="table-success">
        <th>{{ translate("txt-effort") }} [PY]</th>
        {% for year in yearRange %}
            <th class="text-end">
                {% if projectService.isOutOfBounds(project, year) %}<span
                    class="text-danger"
                    title="{{ translate("txt-the-project-is-not-active-in-this-year") }}">{{ year }}</span>
                {% else %}
                    {{ year }}
                {% endif %}
            </th>
        {% endfor %}
        <th class="text-end">{{ translate("txt-total") }}</th>
    </tr>


    {% if not hasWorkPackages %}
        <tr>
            <td></td>
            {% for year in yearRange %}
                {% if projectService.isOutOfBounds(project, year) %}
                    <td class="table-danger">
                {% else %}
                    <td>
                {% endif %}
                {% if year in editYearRange %}
                    {% set effortPerAffiliationAndYear = form.get('effortPerAffiliationAndYear') %}
                    {% set effortPerAffiliationAndYear = effortPerAffiliationAndYear.get(affiliation.id).get(year) %}
                    {{ formelement(effortPerAffiliationAndYear.get('effort')) }}
                {% else %}
                    {% for effort in affiliation.effort|filter(effort => not effort.hasWorkPackage() and effort.dateStart|date('Y') == year) -%}
                        <span class="effort-input total-effort-year-{{ year }}">{{ effort.effort|parse_effort }}</span>
                    {% else %}
                        {{ 0|parse_effort }}
                    {% endfor %}
                {% endif %}
                </td>
            {% endfor %}

            <td class="text-end text-monospace total-effort-affiliation-{{ affiliation.id }}">
                {{ projectService.findTotalEffortByAffiliation(affiliation)|parse_effort }}
            </td>
        </tr>
    {% endif %}



    {% if hasWorkPackages %}
        {# rows for the effort #}
        {% for workpackage in workpackageService.findWorkpackageByProjectAndWhich(project) %}
            <tr>
                <td>{{ workpackage }}</td>
                {% for year in yearRange %}
                    {% if projectService.isOutOfBounds(project, year) %}
                        <td class="table-danger">
                    {% else %}
                        <td>
                    {% endif %}
                    {% if year in editYearRange %}
                        {% set effortPerAffiliationAndYear = form.get('effortPerAffiliationAndYear').get(workpackage.id) %}
                        {% set effortPerAffiliationAndYear = effortPerAffiliationAndYear.get(affiliation.id).get(year) %}
                        {{ formelement(effortPerAffiliationAndYear.get('effort')) }}
                    {% else %}
                        {% for effort in affiliation.effort|filter(effort =>
                            effort.dateStart|date('Y') == year and
                            effort.workpackage.id == workpackage.id) -%}
                            <span class="effort-input" data-workpackage="{{ workpackage.id }}"
                                  data-year="{{ year }}">{{ effort.effort|parse_effort }}</span>
                        {% else %}
                            {{ 0|parse_effort }}
                        {% endfor %}
                    {% endif %}
                    </td>
                {% endfor %}

                <td class="text-end text-monospace total-effort-affiliation-{{ affiliation.id }}-workpackage-{{ workpackage.id }}">
                    {{ projectService.findTotalEffortByWorkpackageAndAffiliation(workpackage, affiliation)|parse_effort }}
                </td>
            </tr>
        {% endfor %}

        <tr>
            <th>{{ translate("txt-effort-total") }}</th>

            {% set totalEffortByAffiliationPerYear = projectService.findTotalEffortByAffiliationPerYear(affiliation) %}

            {% for year in yearRange %}
                <th class="text-end text-monospace total-effort-year-{{ year }}">
                    {{ totalEffortByAffiliationPerYear[year]|parse_effort }}
                </th>
            {% endfor %}
            <th class="text-end text-monospace total-effort-affiliation-{{ affiliation.id }}">{{ projectService.findTotalEffortByAffiliation(affiliation)|parse_effort }}</th>
        </tr>
    {% endif %}

    </tbody>
</table>


{{ formelement(form.get('csrf')) }}

<div class="row mb-3">
    <div class="offset-sm-3 col-sm-9">
        {{ lbs5formelement(form.get('submit')) }}
        {{ lbs5formelement(form.get('cancel')) }}
    </div>
</div>


{{ form().closeTag()|raw }}


<script type="text/javascript">
    $(document).ready(function () {
        $(".cost-input").keyup(function () {
            calculateTotalCost($(this));
        });
        $(".effort-input").keyup(function () {
            calculateTotalEffort($(this));
        });
    });

    function getValue($element) {
        let $value = 0;
        if ($element.hasClass('form-control')) {
            $value = parseFloat($element.val() === '' ? 0 : $element.val());
        } else {
            $value = parseFloat($element.html() === '' ? 0 : $element.html());
        }

        return $value;
    }

    function toKiloEuro(number) {
        return number.toFixed(2);
    }

    function toPY(number) {
        return number.toFixed(2);
    }

    function calculateTotalCost($element) {
        const $inputElement = $('.cost-input');
        const $affiliation = $element.data('affiliation');
        let $total = 0;

        $inputElement.each(function (index, element) {
            $element = $(element);
            const $value = getValue($element);
            $total += $value;
        });

        $('.total-cost-affiliation-' + $affiliation).html(toKiloEuro($total));
    }

    function calculateTotalEffort($element) {

        const $inputElement = $('.effort-input');
        const $year = $element.data('year');
        const $workpackage = $element.data('workpackage');
        const $affiliation = $element.data('affiliation');

        let $totalPerAffiliation = 0;
        let $totalPerAffiliationPerWp = 0;
        let $totalPerYear = 0;

        $inputElement.each(function (index, element) {
            $element = $(element);
            const $value = getValue($element);
            if ($element.data('year') === $year) {
                $totalPerYear += $value;
            }
            if ($element.data('affiliation') === $affiliation) {
                $totalPerAffiliation += $value;
            }

            if ($element.data('affiliation') === $affiliation && $element.data('workpackage') === $workpackage) {
                $totalPerAffiliationPerWp += $value;
            }
        });

        $('.total-effort-affiliation-' + $affiliation).html(toPY($totalPerAffiliation));
        $('.total-effort-affiliation-' + $affiliation + '-workpackage-' + $workpackage).html(toPY($totalPerAffiliationPerWp));
        $('.total-effort-year-' + $year).html(toPY($totalPerYear));

    }
</script>
